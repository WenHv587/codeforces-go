// Generated by copypasta/template/generator_test.go
package main

import (
	"github.com/EndlessCheng/codeforces-go/main/testutil"
	"testing"
)

// https://codeforces.com/problemset/problem/1906/H
// https://codeforces.com/problemset/status/1906/problem/H?friends=on
func Test_cf1906H(t *testing.T) {
	testCases := [][2]string{
		{
			`3 4
AMA
ANAB`,
			`9`,
		},
		{
			`5 8
BINUS
BINANUSA`,
			`120`,
		},
		{
			`15 30
BINUSUNIVERSITY
BINANUSANTARAUNIVERSITYJAKARTA`,
			`151362308`,
		},
		{
			`4 4
UDIN
ASEP`,
			`0`,
		},
		{
			`1 4
J
LLBL`,
			`0`,
		},
	}
	testutil.AssertEqualStringCase(t, testCases, 0, cf1906H)
}

func TestCheck_cf1906H(_t *testing.T) {
	return
	//assert := assert.New(_t)
	testutil.DebugTLE = 0
	rg := testutil.NewRandGenerator()
	inputGenerator := func() (string, testutil.OutputChecker) {
		rg.Clear()
		n := rg.Int(1, 5)
		m := rg.Int(n, 5)
		rg.NewLine()
		rg.Str(n, n, 'A', 'Z')
		rg.NewLine()
		rg.Str(m, m, 'A', 'Z')
		rg.NewLine()
		return rg.String(), func(myOutput string) (_b bool) {
			//in := strings.NewReader(myOutput)
			//
			//myA := make([]int, n)
			//for i := range myA {
			//	Fscan(in, &myA[i])
			//}
			//if !assert.EqualValues(a, myA) {
			//	return
			//}

			return true
		}
	}

	testutil.CheckRunResultsInfWithTarget(_t, inputGenerator, 0, cf1906H)
}

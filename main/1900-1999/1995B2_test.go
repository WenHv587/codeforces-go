// Generated by copypasta/template/generator_test.go
package main

import (
	"fmt"
	"github.com/EndlessCheng/codeforces-go/main/testutil"
	"io"
	"slices"
	"testing"
)

// https://codeforces.com/problemset/problem/1995/B2
// https://codeforces.com/problemset/status/1995/problem/B2?friends=on
func Test_cf1995B2(t *testing.T) {
	testCases := [][2]string{
		{
			`7
3 10
1 2 3
2 2 1
3 1033
206 207 1000
3 4 1
6 20
4 2 7 5 6 1
1 2 1 3 1 7
8 100000
239 30 610 122 24 40 8 2
12 13123 112 1456 124 100 123 10982
6 13
2 4 11 1 3 5
2 2 1 2 2 1
8 10330
206 210 200 201 198 199 222 1000
9 10 11 12 13 14 15 16
2 10000000000
11 12
87312315 753297050`,
			`7
1033
19
99990
13
10000
9999999999`,
		},
		{
			`1
6 20
4 2 7 5 6 1
1 2 1 3 1 7`,
			`19`,
		},
		{
			`1
2 2
3 4
2 5`,
			`0`,
		},
		{
			`1
2 5
3 4
3 3`,
			`4`,
		},
	}
	testutil.AssertEqualStringCase(t, testCases, 0, cf1995B2)
}

func TestCompare(_t *testing.T) {
	//return
	testutil.DebugTLE = 0
	rg := testutil.NewRandGenerator()
	inputGenerator := func() string {
		//return ``
		rg.Clear()
		rg.One()
		n := rg.Int(1, 5)
		rg.Int(1, 5)
		rg.NewLine()
		rg.UniqueSlice(n, 1, 5)
		rg.IntSlice(n, 1, 5)
		return rg.String()
	}

	testutil.AssertEqualRunResultsInf(_t, inputGenerator, solve_cf1995B2, cf1995B2)
}

func solve_cf1995B2(in io.Reader, out io.Writer) {
	var T int
	for fmt.Fscan(in, &T); T > 0; T-- {
		var n int
		var m int64
		fmt.Fscan(in, &n, &m)
		type T struct {
			a int64
			c int64
		}
		arr := make([]T, n)
		for i := range n {
			fmt.Fscan(in, &arr[i].a)
		}
		for i := range n {
			fmt.Fscan(in, &arr[i].c)
		}
		slices.SortFunc(arr, func(x T, y T) int { return int(x.a - y.a) })
		var ans int64 = 0
		for i := range n {
			ans = max(ans, min(arr[i].c, m/arr[i].a)*arr[i].a)
			if i < n-1 && arr[i].a+1 == arr[i+1].a {
				a := arr[i].a
				c1, c2 := arr[i].c, arr[i+1].c
				c1 = min(c1, m/a)
				c2_first := min((m-c1*a)/(a+1), c2)
				cur_ans := c1*a + c2_first*(a+1)
				ans = max(ans, cur_ans+min(m-cur_ans, c1, c2-c2_first))
			}
		}

		fmt.Fprintln(out, ans)
	}
}
